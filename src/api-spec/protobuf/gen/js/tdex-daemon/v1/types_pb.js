// source: tdex-daemon/v1/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var tdex_v1_types_pb = require('../../tdex/v1/types_pb.js');
goog.object.extend(proto, tdex_v1_types_pb);
goog.exportSymbol('proto.tdex_daemon.v1.AccountInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.ActionType', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.AddressWithBlindingKey', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.BalanceInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.CustomPeriod', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.Deposit', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.FeeInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.MarketCollectedFees', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.MarketInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.MarketReport', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.MarketVolume', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.Outpoint', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.Page', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.PredefinedPeriod', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.StrategyType', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.SwapFailInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.SwapInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TimeFrame', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TimeRange', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TradeInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TradePrice', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TradeStatus', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TradeStatusInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.TxOutput', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.UtxoInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.WebhookInfo', null, global);
goog.exportSymbol('proto.tdex_daemon.v1.Withdrawal', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.AccountInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.AccountInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.AccountInfo.displayName = 'proto.tdex_daemon.v1.AccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.MarketInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.MarketInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.MarketInfo.displayName = 'proto.tdex_daemon.v1.MarketInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.UtxoInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.UtxoInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.UtxoInfo.displayName = 'proto.tdex_daemon.v1.UtxoInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.TradeStatusInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.TradeStatusInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.TradeStatusInfo.displayName = 'proto.tdex_daemon.v1.TradeStatusInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.SwapInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.SwapInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.SwapInfo.displayName = 'proto.tdex_daemon.v1.SwapInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.SwapFailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.SwapFailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.SwapFailInfo.displayName = 'proto.tdex_daemon.v1.SwapFailInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.TradeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.TradeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.TradeInfo.displayName = 'proto.tdex_daemon.v1.TradeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.FeeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.FeeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.FeeInfo.displayName = 'proto.tdex_daemon.v1.FeeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.BalanceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.BalanceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.BalanceInfo.displayName = 'proto.tdex_daemon.v1.BalanceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.TxOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.TxOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.TxOutput.displayName = 'proto.tdex_daemon.v1.TxOutput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.AddressWithBlindingKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.AddressWithBlindingKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.AddressWithBlindingKey.displayName = 'proto.tdex_daemon.v1.AddressWithBlindingKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.Outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.Outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.Outpoint.displayName = 'proto.tdex_daemon.v1.Outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.TradePrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.TradePrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.TradePrice.displayName = 'proto.tdex_daemon.v1.TradePrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.WebhookInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.WebhookInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.WebhookInfo.displayName = 'proto.tdex_daemon.v1.WebhookInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.Deposit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.Deposit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.Deposit.displayName = 'proto.tdex_daemon.v1.Deposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.Withdrawal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.Withdrawal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.Withdrawal.displayName = 'proto.tdex_daemon.v1.Withdrawal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.Page = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.Page, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.Page.displayName = 'proto.tdex_daemon.v1.Page';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.MarketReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tdex_daemon.v1.MarketReport.repeatedFields_, null);
};
goog.inherits(proto.tdex_daemon.v1.MarketReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.MarketReport.displayName = 'proto.tdex_daemon.v1.MarketReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.MarketCollectedFees = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.MarketCollectedFees, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.MarketCollectedFees.displayName = 'proto.tdex_daemon.v1.MarketCollectedFees';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.MarketVolume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.MarketVolume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.MarketVolume.displayName = 'proto.tdex_daemon.v1.MarketVolume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.TimeRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.TimeRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.TimeRange.displayName = 'proto.tdex_daemon.v1.TimeRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex_daemon.v1.CustomPeriod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex_daemon.v1.CustomPeriod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex_daemon.v1.CustomPeriod.displayName = 'proto.tdex_daemon.v1.CustomPeriod';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.AccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.AccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.AccountInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    derivationPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    xpub: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastExternalDerived: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lastInternalDerived: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.AccountInfo}
 */
proto.tdex_daemon.v1.AccountInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.AccountInfo;
  return proto.tdex_daemon.v1.AccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.AccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.AccountInfo}
 */
proto.tdex_daemon.v1.AccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountIndex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDerivationPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setXpub(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastExternalDerived(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastInternalDerived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.AccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.AccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.AccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDerivationPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getXpub();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastExternalDerived();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLastInternalDerived();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional uint32 account_index = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.getAccountIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.AccountInfo} returns this
 */
proto.tdex_daemon.v1.AccountInfo.prototype.setAccountIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string derivation_path = 2;
 * @return {string}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.getDerivationPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.AccountInfo} returns this
 */
proto.tdex_daemon.v1.AccountInfo.prototype.setDerivationPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string xpub = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.getXpub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.AccountInfo} returns this
 */
proto.tdex_daemon.v1.AccountInfo.prototype.setXpub = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 last_external_derived = 4;
 * @return {number}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.getLastExternalDerived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.AccountInfo} returns this
 */
proto.tdex_daemon.v1.AccountInfo.prototype.setLastExternalDerived = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 last_internal_derived = 5;
 * @return {number}
 */
proto.tdex_daemon.v1.AccountInfo.prototype.getLastInternalDerived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.AccountInfo} returns this
 */
proto.tdex_daemon.v1.AccountInfo.prototype.setLastInternalDerived = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.MarketInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.MarketInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: (f = msg.getMarket()) && tdex_v1_types_pb.Market.toObject(includeInstance, f),
    fee: (f = msg.getFee()) && tdex_v1_types_pb.Fee.toObject(includeInstance, f),
    tradable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    strategyType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    accountIndex: jspb.Message.getFieldWithDefault(msg, 5, 0),
    price: (f = msg.getPrice()) && tdex_v1_types_pb.Price.toObject(includeInstance, f),
    balance: (f = msg.getBalance()) && tdex_v1_types_pb.Balance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.MarketInfo}
 */
proto.tdex_daemon.v1.MarketInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.MarketInfo;
  return proto.tdex_daemon.v1.MarketInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.MarketInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.MarketInfo}
 */
proto.tdex_daemon.v1.MarketInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.Market;
      reader.readMessage(value,tdex_v1_types_pb.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    case 2:
      var value = new tdex_v1_types_pb.Fee;
      reader.readMessage(value,tdex_v1_types_pb.Fee.deserializeBinaryFromReader);
      msg.setFee(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTradable(value);
      break;
    case 4:
      var value = /** @type {!proto.tdex_daemon.v1.StrategyType} */ (reader.readEnum());
      msg.setStrategyType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccountIndex(value);
      break;
    case 6:
      var value = new tdex_v1_types_pb.Price;
      reader.readMessage(value,tdex_v1_types_pb.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 7:
      var value = new tdex_v1_types_pb.Balance;
      reader.readMessage(value,tdex_v1_types_pb.Balance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.MarketInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.MarketInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_types_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getFee();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tdex_v1_types_pb.Fee.serializeBinaryToWriter
    );
  }
  f = message.getTradable();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStrategyType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAccountIndex();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      tdex_v1_types_pb.Price.serializeBinaryToWriter
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      tdex_v1_types_pb.Balance.serializeBinaryToWriter
    );
  }
};


/**
 * optional tdex.v1.Market market = 1;
 * @return {?proto.tdex.v1.Market}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getMarket = function() {
  return /** @type{?proto.tdex.v1.Market} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Market, 1));
};


/**
 * @param {?proto.tdex.v1.Market|undefined} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
*/
proto.tdex_daemon.v1.MarketInfo.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional tdex.v1.Fee fee = 2;
 * @return {?proto.tdex.v1.Fee}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getFee = function() {
  return /** @type{?proto.tdex.v1.Fee} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Fee, 2));
};


/**
 * @param {?proto.tdex.v1.Fee|undefined} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
*/
proto.tdex_daemon.v1.MarketInfo.prototype.setFee = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.clearFee = function() {
  return this.setFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.hasFee = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool tradable = 3;
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getTradable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.setTradable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional StrategyType strategy_type = 4;
 * @return {!proto.tdex_daemon.v1.StrategyType}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getStrategyType = function() {
  return /** @type {!proto.tdex_daemon.v1.StrategyType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.tdex_daemon.v1.StrategyType} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.setStrategyType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 account_index = 5;
 * @return {number}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getAccountIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.setAccountIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional tdex.v1.Price price = 6;
 * @return {?proto.tdex.v1.Price}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getPrice = function() {
  return /** @type{?proto.tdex.v1.Price} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Price, 6));
};


/**
 * @param {?proto.tdex.v1.Price|undefined} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
*/
proto.tdex_daemon.v1.MarketInfo.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional tdex.v1.Balance balance = 7;
 * @return {?proto.tdex.v1.Balance}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.getBalance = function() {
  return /** @type{?proto.tdex.v1.Balance} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Balance, 7));
};


/**
 * @param {?proto.tdex.v1.Balance|undefined} value
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
*/
proto.tdex_daemon.v1.MarketInfo.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.MarketInfo} returns this
 */
proto.tdex_daemon.v1.MarketInfo.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketInfo.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.UtxoInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.UtxoInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.UtxoInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    outpoint: (f = msg.getOutpoint()) && proto.tdex_daemon.v1.Outpoint.toObject(includeInstance, f),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    asset: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.UtxoInfo}
 */
proto.tdex_daemon.v1.UtxoInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.UtxoInfo;
  return proto.tdex_daemon.v1.UtxoInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.UtxoInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.UtxoInfo}
 */
proto.tdex_daemon.v1.UtxoInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tdex_daemon.v1.Outpoint;
      reader.readMessage(value,proto.tdex_daemon.v1.Outpoint.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.UtxoInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.UtxoInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.UtxoInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tdex_daemon.v1.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Outpoint outpoint = 1;
 * @return {?proto.tdex_daemon.v1.Outpoint}
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.getOutpoint = function() {
  return /** @type{?proto.tdex_daemon.v1.Outpoint} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.Outpoint, 1));
};


/**
 * @param {?proto.tdex_daemon.v1.Outpoint|undefined} value
 * @return {!proto.tdex_daemon.v1.UtxoInfo} returns this
*/
proto.tdex_daemon.v1.UtxoInfo.prototype.setOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.UtxoInfo} returns this
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.clearOutpoint = function() {
  return this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 value = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.UtxoInfo} returns this
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string asset = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.UtxoInfo} returns this
 */
proto.tdex_daemon.v1.UtxoInfo.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.TradeStatusInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.TradeStatusInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.TradeStatusInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TradeStatusInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    failed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.TradeStatusInfo}
 */
proto.tdex_daemon.v1.TradeStatusInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.TradeStatusInfo;
  return proto.tdex_daemon.v1.TradeStatusInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.TradeStatusInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.TradeStatusInfo}
 */
proto.tdex_daemon.v1.TradeStatusInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tdex_daemon.v1.TradeStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.TradeStatusInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.TradeStatusInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.TradeStatusInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TradeStatusInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFailed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional TradeStatus status = 1;
 * @return {!proto.tdex_daemon.v1.TradeStatus}
 */
proto.tdex_daemon.v1.TradeStatusInfo.prototype.getStatus = function() {
  return /** @type {!proto.tdex_daemon.v1.TradeStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tdex_daemon.v1.TradeStatus} value
 * @return {!proto.tdex_daemon.v1.TradeStatusInfo} returns this
 */
proto.tdex_daemon.v1.TradeStatusInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool failed = 2;
 * @return {boolean}
 */
proto.tdex_daemon.v1.TradeStatusInfo.prototype.getFailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tdex_daemon.v1.TradeStatusInfo} returns this
 */
proto.tdex_daemon.v1.TradeStatusInfo.prototype.setFailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.SwapInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.SwapInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.SwapInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.SwapInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    amountP: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assetP: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amountR: jspb.Message.getFieldWithDefault(msg, 3, 0),
    assetR: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.SwapInfo}
 */
proto.tdex_daemon.v1.SwapInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.SwapInfo;
  return proto.tdex_daemon.v1.SwapInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.SwapInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.SwapInfo}
 */
proto.tdex_daemon.v1.SwapInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountP(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetP(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmountR(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetR(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.SwapInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.SwapInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.SwapInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.SwapInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmountP();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssetP();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmountR();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAssetR();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 amount_p = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.SwapInfo.prototype.getAmountP = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.SwapInfo} returns this
 */
proto.tdex_daemon.v1.SwapInfo.prototype.setAmountP = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string asset_p = 2;
 * @return {string}
 */
proto.tdex_daemon.v1.SwapInfo.prototype.getAssetP = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.SwapInfo} returns this
 */
proto.tdex_daemon.v1.SwapInfo.prototype.setAssetP = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 amount_r = 3;
 * @return {number}
 */
proto.tdex_daemon.v1.SwapInfo.prototype.getAmountR = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.SwapInfo} returns this
 */
proto.tdex_daemon.v1.SwapInfo.prototype.setAmountR = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string asset_r = 4;
 * @return {string}
 */
proto.tdex_daemon.v1.SwapInfo.prototype.getAssetR = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.SwapInfo} returns this
 */
proto.tdex_daemon.v1.SwapInfo.prototype.setAssetR = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.SwapFailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.SwapFailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.SwapFailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.SwapFailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    failureCode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    failureMessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.SwapFailInfo}
 */
proto.tdex_daemon.v1.SwapFailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.SwapFailInfo;
  return proto.tdex_daemon.v1.SwapFailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.SwapFailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.SwapFailInfo}
 */
proto.tdex_daemon.v1.SwapFailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFailureCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailureMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.SwapFailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.SwapFailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.SwapFailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.SwapFailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailureCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFailureMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 failure_code = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.SwapFailInfo.prototype.getFailureCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.SwapFailInfo} returns this
 */
proto.tdex_daemon.v1.SwapFailInfo.prototype.setFailureCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string failure_message = 2;
 * @return {string}
 */
proto.tdex_daemon.v1.SwapFailInfo.prototype.getFailureMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.SwapFailInfo} returns this
 */
proto.tdex_daemon.v1.SwapFailInfo.prototype.setFailureMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.TradeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.TradeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TradeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: (f = msg.getStatus()) && proto.tdex_daemon.v1.TradeStatusInfo.toObject(includeInstance, f),
    swapInfo: (f = msg.getSwapInfo()) && proto.tdex_daemon.v1.SwapInfo.toObject(includeInstance, f),
    failInfo: (f = msg.getFailInfo()) && proto.tdex_daemon.v1.SwapFailInfo.toObject(includeInstance, f),
    marketWithFee: (f = msg.getMarketWithFee()) && tdex_v1_types_pb.MarketWithFee.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.tdex_daemon.v1.TradePrice.toObject(includeInstance, f),
    txUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    requestTimeUnix: jspb.Message.getFieldWithDefault(msg, 8, 0),
    acceptTimeUnix: jspb.Message.getFieldWithDefault(msg, 9, 0),
    completeTimeUnix: jspb.Message.getFieldWithDefault(msg, 10, 0),
    settleTimeUnix: jspb.Message.getFieldWithDefault(msg, 11, 0),
    expiryTimeUnix: jspb.Message.getFieldWithDefault(msg, 12, 0),
    requestTimeUtc: jspb.Message.getFieldWithDefault(msg, 13, ""),
    acceptTimeUtc: jspb.Message.getFieldWithDefault(msg, 14, ""),
    completeTimeUtc: jspb.Message.getFieldWithDefault(msg, 15, ""),
    settleTimeUtc: jspb.Message.getFieldWithDefault(msg, 16, ""),
    expiryTimeUtc: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.TradeInfo}
 */
proto.tdex_daemon.v1.TradeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.TradeInfo;
  return proto.tdex_daemon.v1.TradeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.TradeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.TradeInfo}
 */
proto.tdex_daemon.v1.TradeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = new proto.tdex_daemon.v1.TradeStatusInfo;
      reader.readMessage(value,proto.tdex_daemon.v1.TradeStatusInfo.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.tdex_daemon.v1.SwapInfo;
      reader.readMessage(value,proto.tdex_daemon.v1.SwapInfo.deserializeBinaryFromReader);
      msg.setSwapInfo(value);
      break;
    case 4:
      var value = new proto.tdex_daemon.v1.SwapFailInfo;
      reader.readMessage(value,proto.tdex_daemon.v1.SwapFailInfo.deserializeBinaryFromReader);
      msg.setFailInfo(value);
      break;
    case 5:
      var value = new tdex_v1_types_pb.MarketWithFee;
      reader.readMessage(value,tdex_v1_types_pb.MarketWithFee.deserializeBinaryFromReader);
      msg.setMarketWithFee(value);
      break;
    case 6:
      var value = new proto.tdex_daemon.v1.TradePrice;
      reader.readMessage(value,proto.tdex_daemon.v1.TradePrice.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxUrl(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestTimeUnix(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAcceptTimeUnix(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompleteTimeUnix(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSettleTimeUnix(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiryTimeUnix(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestTimeUtc(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcceptTimeUtc(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompleteTimeUtc(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettleTimeUtc(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiryTimeUtc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.TradeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.TradeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TradeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tdex_daemon.v1.TradeStatusInfo.serializeBinaryToWriter
    );
  }
  f = message.getSwapInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tdex_daemon.v1.SwapInfo.serializeBinaryToWriter
    );
  }
  f = message.getFailInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tdex_daemon.v1.SwapFailInfo.serializeBinaryToWriter
    );
  }
  f = message.getMarketWithFee();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      tdex_v1_types_pb.MarketWithFee.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tdex_daemon.v1.TradePrice.serializeBinaryToWriter
    );
  }
  f = message.getTxUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRequestTimeUnix();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getAcceptTimeUnix();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getCompleteTimeUnix();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getSettleTimeUnix();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getExpiryTimeUnix();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getRequestTimeUtc();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAcceptTimeUtc();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCompleteTimeUtc();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSettleTimeUtc();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getExpiryTimeUtc();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TradeStatusInfo status = 2;
 * @return {?proto.tdex_daemon.v1.TradeStatusInfo}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getStatus = function() {
  return /** @type{?proto.tdex_daemon.v1.TradeStatusInfo} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.TradeStatusInfo, 2));
};


/**
 * @param {?proto.tdex_daemon.v1.TradeStatusInfo|undefined} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
*/
proto.tdex_daemon.v1.TradeInfo.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SwapInfo swap_info = 3;
 * @return {?proto.tdex_daemon.v1.SwapInfo}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getSwapInfo = function() {
  return /** @type{?proto.tdex_daemon.v1.SwapInfo} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.SwapInfo, 3));
};


/**
 * @param {?proto.tdex_daemon.v1.SwapInfo|undefined} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
*/
proto.tdex_daemon.v1.TradeInfo.prototype.setSwapInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.clearSwapInfo = function() {
  return this.setSwapInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.hasSwapInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SwapFailInfo fail_info = 4;
 * @return {?proto.tdex_daemon.v1.SwapFailInfo}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getFailInfo = function() {
  return /** @type{?proto.tdex_daemon.v1.SwapFailInfo} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.SwapFailInfo, 4));
};


/**
 * @param {?proto.tdex_daemon.v1.SwapFailInfo|undefined} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
*/
proto.tdex_daemon.v1.TradeInfo.prototype.setFailInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.clearFailInfo = function() {
  return this.setFailInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.hasFailInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional tdex.v1.MarketWithFee market_with_fee = 5;
 * @return {?proto.tdex.v1.MarketWithFee}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getMarketWithFee = function() {
  return /** @type{?proto.tdex.v1.MarketWithFee} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.MarketWithFee, 5));
};


/**
 * @param {?proto.tdex.v1.MarketWithFee|undefined} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
*/
proto.tdex_daemon.v1.TradeInfo.prototype.setMarketWithFee = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.clearMarketWithFee = function() {
  return this.setMarketWithFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.hasMarketWithFee = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TradePrice price = 6;
 * @return {?proto.tdex_daemon.v1.TradePrice}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getPrice = function() {
  return /** @type{?proto.tdex_daemon.v1.TradePrice} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.TradePrice, 6));
};


/**
 * @param {?proto.tdex_daemon.v1.TradePrice|undefined} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
*/
proto.tdex_daemon.v1.TradeInfo.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string tx_url = 7;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getTxUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setTxUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 request_time_unix = 8;
 * @return {number}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getRequestTimeUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setRequestTimeUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 accept_time_unix = 9;
 * @return {number}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getAcceptTimeUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setAcceptTimeUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 complete_time_unix = 10;
 * @return {number}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getCompleteTimeUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setCompleteTimeUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 settle_time_unix = 11;
 * @return {number}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getSettleTimeUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setSettleTimeUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 expiry_time_unix = 12;
 * @return {number}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getExpiryTimeUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setExpiryTimeUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string request_time_utc = 13;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getRequestTimeUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setRequestTimeUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string accept_time_utc = 14;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getAcceptTimeUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setAcceptTimeUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string complete_time_utc = 15;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getCompleteTimeUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setCompleteTimeUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string settle_time_utc = 16;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getSettleTimeUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setSettleTimeUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string expiry_time_utc = 17;
 * @return {string}
 */
proto.tdex_daemon.v1.TradeInfo.prototype.getExpiryTimeUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TradeInfo} returns this
 */
proto.tdex_daemon.v1.TradeInfo.prototype.setExpiryTimeUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.FeeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.FeeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.FeeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basisPoint: jspb.Message.getFieldWithDefault(msg, 2, 0),
    asset: jspb.Message.getFieldWithDefault(msg, 3, ""),
    percentageFeeAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fixedFeeAmount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    marketPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.FeeInfo}
 */
proto.tdex_daemon.v1.FeeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.FeeInfo;
  return proto.tdex_daemon.v1.FeeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.FeeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.FeeInfo}
 */
proto.tdex_daemon.v1.FeeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBasisPoint(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPercentageFeeAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFixedFeeAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMarketPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.FeeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.FeeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.FeeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasisPoint();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPercentageFeeAmount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getFixedFeeAmount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getMarketPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.FeeInfo} returns this
 */
proto.tdex_daemon.v1.FeeInfo.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 basis_point = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.getBasisPoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.FeeInfo} returns this
 */
proto.tdex_daemon.v1.FeeInfo.prototype.setBasisPoint = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string asset = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.FeeInfo} returns this
 */
proto.tdex_daemon.v1.FeeInfo.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 percentage_fee_amount = 4;
 * @return {number}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.getPercentageFeeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.FeeInfo} returns this
 */
proto.tdex_daemon.v1.FeeInfo.prototype.setPercentageFeeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 fixed_fee_amount = 5;
 * @return {number}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.getFixedFeeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.FeeInfo} returns this
 */
proto.tdex_daemon.v1.FeeInfo.prototype.setFixedFeeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float market_price = 6;
 * @return {number}
 */
proto.tdex_daemon.v1.FeeInfo.prototype.getMarketPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.FeeInfo} returns this
 */
proto.tdex_daemon.v1.FeeInfo.prototype.setMarketPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.BalanceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.BalanceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.BalanceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),
    confirmedBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),
    unconfirmedBalance: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.BalanceInfo}
 */
proto.tdex_daemon.v1.BalanceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.BalanceInfo;
  return proto.tdex_daemon.v1.BalanceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.BalanceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.BalanceInfo}
 */
proto.tdex_daemon.v1.BalanceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBalance(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setConfirmedBalance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnconfirmedBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.BalanceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.BalanceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.BalanceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalBalance();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getConfirmedBalance();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUnconfirmedBalance();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 total_balance = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.getTotalBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.BalanceInfo} returns this
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.setTotalBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 confirmed_balance = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.getConfirmedBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.BalanceInfo} returns this
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.setConfirmedBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 unconfirmed_balance = 3;
 * @return {number}
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.getUnconfirmedBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.BalanceInfo} returns this
 */
proto.tdex_daemon.v1.BalanceInfo.prototype.setUnconfirmedBalance = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.TxOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.TxOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.TxOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TxOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    asset: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.TxOutput}
 */
proto.tdex_daemon.v1.TxOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.TxOutput;
  return proto.tdex_daemon.v1.TxOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.TxOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.TxOutput}
 */
proto.tdex_daemon.v1.TxOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.TxOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.TxOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.TxOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TxOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string asset = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.TxOutput.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TxOutput} returns this
 */
proto.tdex_daemon.v1.TxOutput.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.TxOutput.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TxOutput} returns this
 */
proto.tdex_daemon.v1.TxOutput.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.TxOutput.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.TxOutput} returns this
 */
proto.tdex_daemon.v1.TxOutput.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.AddressWithBlindingKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.AddressWithBlindingKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blinding: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.AddressWithBlindingKey}
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.AddressWithBlindingKey;
  return proto.tdex_daemon.v1.AddressWithBlindingKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.AddressWithBlindingKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.AddressWithBlindingKey}
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlinding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.AddressWithBlindingKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.AddressWithBlindingKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlinding();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.AddressWithBlindingKey} returns this
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string blinding = 2;
 * @return {string}
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.prototype.getBlinding = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.AddressWithBlindingKey} returns this
 */
proto.tdex_daemon.v1.AddressWithBlindingKey.prototype.setBlinding = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.Outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.Outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.Outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.Outpoint}
 */
proto.tdex_daemon.v1.Outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.Outpoint;
  return proto.tdex_daemon.v1.Outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.Outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.Outpoint}
 */
proto.tdex_daemon.v1.Outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.Outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.Outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.Outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.Outpoint.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.Outpoint} returns this
 */
proto.tdex_daemon.v1.Outpoint.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 index = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.Outpoint.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.Outpoint} returns this
 */
proto.tdex_daemon.v1.Outpoint.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.TradePrice.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.TradePrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.TradePrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TradePrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    basePrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    quotePrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.TradePrice}
 */
proto.tdex_daemon.v1.TradePrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.TradePrice;
  return proto.tdex_daemon.v1.TradePrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.TradePrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.TradePrice}
 */
proto.tdex_daemon.v1.TradePrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBasePrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotePrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.TradePrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.TradePrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.TradePrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TradePrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasePrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getQuotePrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double base_price = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.TradePrice.prototype.getBasePrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradePrice} returns this
 */
proto.tdex_daemon.v1.TradePrice.prototype.setBasePrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double quote_price = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.TradePrice.prototype.getQuotePrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.TradePrice} returns this
 */
proto.tdex_daemon.v1.TradePrice.prototype.setQuotePrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.WebhookInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.WebhookInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.WebhookInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isSecured: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.WebhookInfo}
 */
proto.tdex_daemon.v1.WebhookInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.WebhookInfo;
  return proto.tdex_daemon.v1.WebhookInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.WebhookInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.WebhookInfo}
 */
proto.tdex_daemon.v1.WebhookInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSecured(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.WebhookInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.WebhookInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.WebhookInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsSecured();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.WebhookInfo} returns this
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string endpoint = 2;
 * @return {string}
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.WebhookInfo} returns this
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_secured = 3;
 * @return {boolean}
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.getIsSecured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tdex_daemon.v1.WebhookInfo} returns this
 */
proto.tdex_daemon.v1.WebhookInfo.prototype.setIsSecured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.Deposit.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.Deposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.Deposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Deposit.toObject = function(includeInstance, msg) {
  var f, obj = {
    utxo: (f = msg.getUtxo()) && proto.tdex_daemon.v1.UtxoInfo.toObject(includeInstance, f),
    timestampUnix: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestampUtc: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.Deposit}
 */
proto.tdex_daemon.v1.Deposit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.Deposit;
  return proto.tdex_daemon.v1.Deposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.Deposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.Deposit}
 */
proto.tdex_daemon.v1.Deposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tdex_daemon.v1.UtxoInfo;
      reader.readMessage(value,proto.tdex_daemon.v1.UtxoInfo.deserializeBinaryFromReader);
      msg.setUtxo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestampUnix(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestampUtc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.Deposit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.Deposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.Deposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Deposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUtxo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tdex_daemon.v1.UtxoInfo.serializeBinaryToWriter
    );
  }
  f = message.getTimestampUnix();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestampUtc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional UtxoInfo utxo = 1;
 * @return {?proto.tdex_daemon.v1.UtxoInfo}
 */
proto.tdex_daemon.v1.Deposit.prototype.getUtxo = function() {
  return /** @type{?proto.tdex_daemon.v1.UtxoInfo} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.UtxoInfo, 1));
};


/**
 * @param {?proto.tdex_daemon.v1.UtxoInfo|undefined} value
 * @return {!proto.tdex_daemon.v1.Deposit} returns this
*/
proto.tdex_daemon.v1.Deposit.prototype.setUtxo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.Deposit} returns this
 */
proto.tdex_daemon.v1.Deposit.prototype.clearUtxo = function() {
  return this.setUtxo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.Deposit.prototype.hasUtxo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 timestamp_unix = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.Deposit.prototype.getTimestampUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.Deposit} returns this
 */
proto.tdex_daemon.v1.Deposit.prototype.setTimestampUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string timestamp_utc = 5;
 * @return {string}
 */
proto.tdex_daemon.v1.Deposit.prototype.getTimestampUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.Deposit} returns this
 */
proto.tdex_daemon.v1.Deposit.prototype.setTimestampUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.Withdrawal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.Withdrawal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Withdrawal.toObject = function(includeInstance, msg) {
  var f, obj = {
    txId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    balance: (f = msg.getBalance()) && tdex_v1_types_pb.Balance.toObject(includeInstance, f),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timestampUnix: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestampUtc: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.Withdrawal}
 */
proto.tdex_daemon.v1.Withdrawal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.Withdrawal;
  return proto.tdex_daemon.v1.Withdrawal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.Withdrawal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.Withdrawal}
 */
proto.tdex_daemon.v1.Withdrawal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxId(value);
      break;
    case 2:
      var value = new tdex_v1_types_pb.Balance;
      reader.readMessage(value,tdex_v1_types_pb.Balance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestampUnix(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestampUtc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.Withdrawal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.Withdrawal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Withdrawal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tdex_v1_types_pb.Balance.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimestampUnix();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getTimestampUtc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string tx_id = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.getTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.Withdrawal} returns this
 */
proto.tdex_daemon.v1.Withdrawal.prototype.setTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional tdex.v1.Balance balance = 2;
 * @return {?proto.tdex.v1.Balance}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.getBalance = function() {
  return /** @type{?proto.tdex.v1.Balance} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Balance, 2));
};


/**
 * @param {?proto.tdex.v1.Balance|undefined} value
 * @return {!proto.tdex_daemon.v1.Withdrawal} returns this
*/
proto.tdex_daemon.v1.Withdrawal.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.Withdrawal} returns this
 */
proto.tdex_daemon.v1.Withdrawal.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.Withdrawal} returns this
 */
proto.tdex_daemon.v1.Withdrawal.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 timestamp_unix = 4;
 * @return {number}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.getTimestampUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.Withdrawal} returns this
 */
proto.tdex_daemon.v1.Withdrawal.prototype.setTimestampUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string timestamp_utc = 5;
 * @return {string}
 */
proto.tdex_daemon.v1.Withdrawal.prototype.getTimestampUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.Withdrawal} returns this
 */
proto.tdex_daemon.v1.Withdrawal.prototype.setTimestampUtc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.Page.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.Page.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.Page} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Page.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.Page}
 */
proto.tdex_daemon.v1.Page.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.Page;
  return proto.tdex_daemon.v1.Page.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.Page} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.Page}
 */
proto.tdex_daemon.v1.Page.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageNumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.Page.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.Page.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.Page} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.Page.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 page_number = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.Page.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.Page} returns this
 */
proto.tdex_daemon.v1.Page.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 page_size = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.Page.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.Page} returns this
 */
proto.tdex_daemon.v1.Page.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tdex_daemon.v1.MarketReport.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.MarketReport.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.MarketReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.MarketReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCollectedFees: (f = msg.getTotalCollectedFees()) && proto.tdex_daemon.v1.MarketCollectedFees.toObject(includeInstance, f),
    totalVolume: (f = msg.getTotalVolume()) && proto.tdex_daemon.v1.MarketVolume.toObject(includeInstance, f),
    groupedVolumeList: jspb.Message.toObjectList(msg.getGroupedVolumeList(),
    proto.tdex_daemon.v1.MarketVolume.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.MarketReport}
 */
proto.tdex_daemon.v1.MarketReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.MarketReport;
  return proto.tdex_daemon.v1.MarketReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.MarketReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.MarketReport}
 */
proto.tdex_daemon.v1.MarketReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tdex_daemon.v1.MarketCollectedFees;
      reader.readMessage(value,proto.tdex_daemon.v1.MarketCollectedFees.deserializeBinaryFromReader);
      msg.setTotalCollectedFees(value);
      break;
    case 2:
      var value = new proto.tdex_daemon.v1.MarketVolume;
      reader.readMessage(value,proto.tdex_daemon.v1.MarketVolume.deserializeBinaryFromReader);
      msg.setTotalVolume(value);
      break;
    case 3:
      var value = new proto.tdex_daemon.v1.MarketVolume;
      reader.readMessage(value,proto.tdex_daemon.v1.MarketVolume.deserializeBinaryFromReader);
      msg.addGroupedVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.MarketReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.MarketReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.MarketReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalCollectedFees();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tdex_daemon.v1.MarketCollectedFees.serializeBinaryToWriter
    );
  }
  f = message.getTotalVolume();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tdex_daemon.v1.MarketVolume.serializeBinaryToWriter
    );
  }
  f = message.getGroupedVolumeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tdex_daemon.v1.MarketVolume.serializeBinaryToWriter
    );
  }
};


/**
 * optional MarketCollectedFees total_collected_fees = 1;
 * @return {?proto.tdex_daemon.v1.MarketCollectedFees}
 */
proto.tdex_daemon.v1.MarketReport.prototype.getTotalCollectedFees = function() {
  return /** @type{?proto.tdex_daemon.v1.MarketCollectedFees} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.MarketCollectedFees, 1));
};


/**
 * @param {?proto.tdex_daemon.v1.MarketCollectedFees|undefined} value
 * @return {!proto.tdex_daemon.v1.MarketReport} returns this
*/
proto.tdex_daemon.v1.MarketReport.prototype.setTotalCollectedFees = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.MarketReport} returns this
 */
proto.tdex_daemon.v1.MarketReport.prototype.clearTotalCollectedFees = function() {
  return this.setTotalCollectedFees(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketReport.prototype.hasTotalCollectedFees = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MarketVolume total_volume = 2;
 * @return {?proto.tdex_daemon.v1.MarketVolume}
 */
proto.tdex_daemon.v1.MarketReport.prototype.getTotalVolume = function() {
  return /** @type{?proto.tdex_daemon.v1.MarketVolume} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.MarketVolume, 2));
};


/**
 * @param {?proto.tdex_daemon.v1.MarketVolume|undefined} value
 * @return {!proto.tdex_daemon.v1.MarketReport} returns this
*/
proto.tdex_daemon.v1.MarketReport.prototype.setTotalVolume = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.MarketReport} returns this
 */
proto.tdex_daemon.v1.MarketReport.prototype.clearTotalVolume = function() {
  return this.setTotalVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.MarketReport.prototype.hasTotalVolume = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MarketVolume grouped_volume = 3;
 * @return {!Array<!proto.tdex_daemon.v1.MarketVolume>}
 */
proto.tdex_daemon.v1.MarketReport.prototype.getGroupedVolumeList = function() {
  return /** @type{!Array<!proto.tdex_daemon.v1.MarketVolume>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tdex_daemon.v1.MarketVolume, 3));
};


/**
 * @param {!Array<!proto.tdex_daemon.v1.MarketVolume>} value
 * @return {!proto.tdex_daemon.v1.MarketReport} returns this
*/
proto.tdex_daemon.v1.MarketReport.prototype.setGroupedVolumeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tdex_daemon.v1.MarketVolume=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tdex_daemon.v1.MarketVolume}
 */
proto.tdex_daemon.v1.MarketReport.prototype.addGroupedVolume = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tdex_daemon.v1.MarketVolume, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tdex_daemon.v1.MarketReport} returns this
 */
proto.tdex_daemon.v1.MarketReport.prototype.clearGroupedVolumeList = function() {
  return this.setGroupedVolumeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.MarketCollectedFees.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.MarketCollectedFees} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketCollectedFees.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    quoteAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.MarketCollectedFees}
 */
proto.tdex_daemon.v1.MarketCollectedFees.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.MarketCollectedFees;
  return proto.tdex_daemon.v1.MarketCollectedFees.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.MarketCollectedFees} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.MarketCollectedFees}
 */
proto.tdex_daemon.v1.MarketCollectedFees.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuoteAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.MarketCollectedFees.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.MarketCollectedFees} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketCollectedFees.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseAmount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getQuoteAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 base_amount = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.getBaseAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.MarketCollectedFees} returns this
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.setBaseAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 quote_amount = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.getQuoteAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.MarketCollectedFees} returns this
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.setQuoteAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string start_date = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.MarketCollectedFees} returns this
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string end_date = 4;
 * @return {string}
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.MarketCollectedFees} returns this
 */
proto.tdex_daemon.v1.MarketCollectedFees.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.MarketVolume.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.MarketVolume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.MarketVolume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketVolume.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseVolume: jspb.Message.getFieldWithDefault(msg, 1, 0),
    quoteVolume: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.MarketVolume}
 */
proto.tdex_daemon.v1.MarketVolume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.MarketVolume;
  return proto.tdex_daemon.v1.MarketVolume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.MarketVolume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.MarketVolume}
 */
proto.tdex_daemon.v1.MarketVolume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseVolume(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuoteVolume(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.MarketVolume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.MarketVolume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.MarketVolume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.MarketVolume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseVolume();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getQuoteVolume();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 base_volume = 1;
 * @return {number}
 */
proto.tdex_daemon.v1.MarketVolume.prototype.getBaseVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.MarketVolume} returns this
 */
proto.tdex_daemon.v1.MarketVolume.prototype.setBaseVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 quote_volume = 2;
 * @return {number}
 */
proto.tdex_daemon.v1.MarketVolume.prototype.getQuoteVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex_daemon.v1.MarketVolume} returns this
 */
proto.tdex_daemon.v1.MarketVolume.prototype.setQuoteVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string start_date = 3;
 * @return {string}
 */
proto.tdex_daemon.v1.MarketVolume.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.MarketVolume} returns this
 */
proto.tdex_daemon.v1.MarketVolume.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string end_date = 4;
 * @return {string}
 */
proto.tdex_daemon.v1.MarketVolume.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.MarketVolume} returns this
 */
proto.tdex_daemon.v1.MarketVolume.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.TimeRange.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.TimeRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.TimeRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TimeRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    predefinedPeriod: jspb.Message.getFieldWithDefault(msg, 1, 0),
    customPeriod: (f = msg.getCustomPeriod()) && proto.tdex_daemon.v1.CustomPeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.TimeRange}
 */
proto.tdex_daemon.v1.TimeRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.TimeRange;
  return proto.tdex_daemon.v1.TimeRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.TimeRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.TimeRange}
 */
proto.tdex_daemon.v1.TimeRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tdex_daemon.v1.PredefinedPeriod} */ (reader.readEnum());
      msg.setPredefinedPeriod(value);
      break;
    case 2:
      var value = new proto.tdex_daemon.v1.CustomPeriod;
      reader.readMessage(value,proto.tdex_daemon.v1.CustomPeriod.deserializeBinaryFromReader);
      msg.setCustomPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.TimeRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.TimeRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.TimeRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.TimeRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPredefinedPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCustomPeriod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tdex_daemon.v1.CustomPeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional PredefinedPeriod predefined_period = 1;
 * @return {!proto.tdex_daemon.v1.PredefinedPeriod}
 */
proto.tdex_daemon.v1.TimeRange.prototype.getPredefinedPeriod = function() {
  return /** @type {!proto.tdex_daemon.v1.PredefinedPeriod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tdex_daemon.v1.PredefinedPeriod} value
 * @return {!proto.tdex_daemon.v1.TimeRange} returns this
 */
proto.tdex_daemon.v1.TimeRange.prototype.setPredefinedPeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional CustomPeriod custom_period = 2;
 * @return {?proto.tdex_daemon.v1.CustomPeriod}
 */
proto.tdex_daemon.v1.TimeRange.prototype.getCustomPeriod = function() {
  return /** @type{?proto.tdex_daemon.v1.CustomPeriod} */ (
    jspb.Message.getWrapperField(this, proto.tdex_daemon.v1.CustomPeriod, 2));
};


/**
 * @param {?proto.tdex_daemon.v1.CustomPeriod|undefined} value
 * @return {!proto.tdex_daemon.v1.TimeRange} returns this
*/
proto.tdex_daemon.v1.TimeRange.prototype.setCustomPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex_daemon.v1.TimeRange} returns this
 */
proto.tdex_daemon.v1.TimeRange.prototype.clearCustomPeriod = function() {
  return this.setCustomPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex_daemon.v1.TimeRange.prototype.hasCustomPeriod = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex_daemon.v1.CustomPeriod.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex_daemon.v1.CustomPeriod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex_daemon.v1.CustomPeriod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.CustomPeriod.toObject = function(includeInstance, msg) {
  var f, obj = {
    startDate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex_daemon.v1.CustomPeriod}
 */
proto.tdex_daemon.v1.CustomPeriod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex_daemon.v1.CustomPeriod;
  return proto.tdex_daemon.v1.CustomPeriod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex_daemon.v1.CustomPeriod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex_daemon.v1.CustomPeriod}
 */
proto.tdex_daemon.v1.CustomPeriod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex_daemon.v1.CustomPeriod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex_daemon.v1.CustomPeriod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex_daemon.v1.CustomPeriod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex_daemon.v1.CustomPeriod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string start_date = 1;
 * @return {string}
 */
proto.tdex_daemon.v1.CustomPeriod.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.CustomPeriod} returns this
 */
proto.tdex_daemon.v1.CustomPeriod.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end_date = 2;
 * @return {string}
 */
proto.tdex_daemon.v1.CustomPeriod.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex_daemon.v1.CustomPeriod} returns this
 */
proto.tdex_daemon.v1.CustomPeriod.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.tdex_daemon.v1.StrategyType = {
  STRATEGY_TYPE_PLUGGABLE: 0,
  STRATEGY_TYPE_BALANCED: 1,
  STRATEGY_TYPE_UNBALANCED: 2
};

/**
 * @enum {number}
 */
proto.tdex_daemon.v1.TradeStatus = {
  TRADE_STATUS_UNDEFINED: 0,
  TRADE_STATUS_REQUEST: 1,
  TRADE_STATUS_ACCEPT: 2,
  TRADE_STATUS_COMPLETE: 3,
  TRADE_STATUS_SETTLED: 4,
  TRADE_STATUS_EXPIRED: 5
};

/**
 * @enum {number}
 */
proto.tdex_daemon.v1.ActionType = {
  ACTION_TYPE_TRADE_SETTLED: 0,
  ACTION_TYPE_ACCOUNT_LOW_BALANCE: 1,
  ACTION_TYPE_ACCOUNT_WITHDRAW: 2,
  ACTION_TYPE_ALL_ACTIONS: 3
};

/**
 * @enum {number}
 */
proto.tdex_daemon.v1.PredefinedPeriod = {
  PREDEFINED_PERIOD_UNSPECIFIED: 0,
  PREDEFINED_PERIOD_LAST_HOUR: 1,
  PREDEFINED_PERIOD_LAST_DAY: 2,
  PREDEFINED_PERIOD_LAST_WEEK: 3,
  PREDEFINED_PERIOD_LAST_MONTH: 4,
  PREDEFINED_PERIOD_LAST_THREE_MONTHS: 5,
  PREDEFINED_PERIOD_YEAR_TO_DATE: 6,
  PREDEFINED_PERIOD_LAST_YEAR: 7,
  PREDEFINED_PERIOD_ALL: 8
};

/**
 * @enum {number}
 */
proto.tdex_daemon.v1.TimeFrame = {
  TIME_FRAME_HOUR: 0,
  TIME_FRAME_FOUR_HOURS: 1,
  TIME_FRAME_DAY: 2,
  TIME_FRAME_WEEK: 3,
  TIME_FRAME_MONTH: 4
};

goog.object.extend(exports, proto.tdex_daemon.v1);
