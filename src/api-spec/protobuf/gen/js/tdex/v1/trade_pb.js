// source: tdex/v1/trade.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var tdex_v1_swap_pb = require('../../tdex/v1/swap_pb.js');
goog.object.extend(proto, tdex_v1_swap_pb);
var tdex_v1_types_pb = require('../../tdex/v1/types_pb.js');
goog.object.extend(proto, tdex_v1_types_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.tdex.v1.CompleteTradeRequest', null, global);
goog.exportSymbol('proto.tdex.v1.CompleteTradeResponse', null, global);
goog.exportSymbol('proto.tdex.v1.GetMarketBalanceRequest', null, global);
goog.exportSymbol('proto.tdex.v1.GetMarketBalanceResponse', null, global);
goog.exportSymbol('proto.tdex.v1.ListMarketsRequest', null, global);
goog.exportSymbol('proto.tdex.v1.ListMarketsResponse', null, global);
goog.exportSymbol('proto.tdex.v1.PreviewTradeRequest', null, global);
goog.exportSymbol('proto.tdex.v1.PreviewTradeResponse', null, global);
goog.exportSymbol('proto.tdex.v1.ProposeTradeRequest', null, global);
goog.exportSymbol('proto.tdex.v1.ProposeTradeResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.ListMarketsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.ListMarketsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.ListMarketsRequest.displayName = 'proto.tdex.v1.ListMarketsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.ListMarketsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tdex.v1.ListMarketsResponse.repeatedFields_, null);
};
goog.inherits(proto.tdex.v1.ListMarketsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.ListMarketsResponse.displayName = 'proto.tdex.v1.ListMarketsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.GetMarketBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.GetMarketBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.GetMarketBalanceRequest.displayName = 'proto.tdex.v1.GetMarketBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.GetMarketBalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.GetMarketBalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.GetMarketBalanceResponse.displayName = 'proto.tdex.v1.GetMarketBalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.PreviewTradeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.PreviewTradeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.PreviewTradeRequest.displayName = 'proto.tdex.v1.PreviewTradeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.PreviewTradeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tdex.v1.PreviewTradeResponse.repeatedFields_, null);
};
goog.inherits(proto.tdex.v1.PreviewTradeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.PreviewTradeResponse.displayName = 'proto.tdex.v1.PreviewTradeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.ProposeTradeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.ProposeTradeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.ProposeTradeRequest.displayName = 'proto.tdex.v1.ProposeTradeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.ProposeTradeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.ProposeTradeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.ProposeTradeResponse.displayName = 'proto.tdex.v1.ProposeTradeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.CompleteTradeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.CompleteTradeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.CompleteTradeRequest.displayName = 'proto.tdex.v1.CompleteTradeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tdex.v1.CompleteTradeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tdex.v1.CompleteTradeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tdex.v1.CompleteTradeResponse.displayName = 'proto.tdex.v1.CompleteTradeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.ListMarketsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.ListMarketsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.ListMarketsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ListMarketsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.ListMarketsRequest}
 */
proto.tdex.v1.ListMarketsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.ListMarketsRequest;
  return proto.tdex.v1.ListMarketsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.ListMarketsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.ListMarketsRequest}
 */
proto.tdex.v1.ListMarketsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.ListMarketsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.ListMarketsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.ListMarketsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ListMarketsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tdex.v1.ListMarketsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.ListMarketsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.ListMarketsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.ListMarketsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ListMarketsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketsList: jspb.Message.toObjectList(msg.getMarketsList(),
    tdex_v1_types_pb.MarketWithFee.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.ListMarketsResponse}
 */
proto.tdex.v1.ListMarketsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.ListMarketsResponse;
  return proto.tdex.v1.ListMarketsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.ListMarketsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.ListMarketsResponse}
 */
proto.tdex.v1.ListMarketsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.MarketWithFee;
      reader.readMessage(value,tdex_v1_types_pb.MarketWithFee.deserializeBinaryFromReader);
      msg.addMarkets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.ListMarketsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.ListMarketsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.ListMarketsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ListMarketsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tdex_v1_types_pb.MarketWithFee.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MarketWithFee markets = 1;
 * @return {!Array<!proto.tdex.v1.MarketWithFee>}
 */
proto.tdex.v1.ListMarketsResponse.prototype.getMarketsList = function() {
  return /** @type{!Array<!proto.tdex.v1.MarketWithFee>} */ (
    jspb.Message.getRepeatedWrapperField(this, tdex_v1_types_pb.MarketWithFee, 1));
};


/**
 * @param {!Array<!proto.tdex.v1.MarketWithFee>} value
 * @return {!proto.tdex.v1.ListMarketsResponse} returns this
*/
proto.tdex.v1.ListMarketsResponse.prototype.setMarketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tdex.v1.MarketWithFee=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tdex.v1.MarketWithFee}
 */
proto.tdex.v1.ListMarketsResponse.prototype.addMarkets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tdex.v1.MarketWithFee, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tdex.v1.ListMarketsResponse} returns this
 */
proto.tdex.v1.ListMarketsResponse.prototype.clearMarketsList = function() {
  return this.setMarketsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.GetMarketBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.GetMarketBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.GetMarketBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.GetMarketBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: (f = msg.getMarket()) && tdex_v1_types_pb.Market.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.GetMarketBalanceRequest}
 */
proto.tdex.v1.GetMarketBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.GetMarketBalanceRequest;
  return proto.tdex.v1.GetMarketBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.GetMarketBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.GetMarketBalanceRequest}
 */
proto.tdex.v1.GetMarketBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.Market;
      reader.readMessage(value,tdex_v1_types_pb.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.GetMarketBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.GetMarketBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.GetMarketBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.GetMarketBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_types_pb.Market.serializeBinaryToWriter
    );
  }
};


/**
 * optional Market market = 1;
 * @return {?proto.tdex.v1.Market}
 */
proto.tdex.v1.GetMarketBalanceRequest.prototype.getMarket = function() {
  return /** @type{?proto.tdex.v1.Market} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Market, 1));
};


/**
 * @param {?proto.tdex.v1.Market|undefined} value
 * @return {!proto.tdex.v1.GetMarketBalanceRequest} returns this
*/
proto.tdex.v1.GetMarketBalanceRequest.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.GetMarketBalanceRequest} returns this
 */
proto.tdex.v1.GetMarketBalanceRequest.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.GetMarketBalanceRequest.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.GetMarketBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.GetMarketBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.GetMarketBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.GetMarketBalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: (f = msg.getBalance()) && tdex_v1_types_pb.BalanceWithFee.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.GetMarketBalanceResponse}
 */
proto.tdex.v1.GetMarketBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.GetMarketBalanceResponse;
  return proto.tdex.v1.GetMarketBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.GetMarketBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.GetMarketBalanceResponse}
 */
proto.tdex.v1.GetMarketBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.BalanceWithFee;
      reader.readMessage(value,tdex_v1_types_pb.BalanceWithFee.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.GetMarketBalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.GetMarketBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.GetMarketBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.GetMarketBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_types_pb.BalanceWithFee.serializeBinaryToWriter
    );
  }
};


/**
 * optional BalanceWithFee balance = 1;
 * @return {?proto.tdex.v1.BalanceWithFee}
 */
proto.tdex.v1.GetMarketBalanceResponse.prototype.getBalance = function() {
  return /** @type{?proto.tdex.v1.BalanceWithFee} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.BalanceWithFee, 1));
};


/**
 * @param {?proto.tdex.v1.BalanceWithFee|undefined} value
 * @return {!proto.tdex.v1.GetMarketBalanceResponse} returns this
*/
proto.tdex.v1.GetMarketBalanceResponse.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.GetMarketBalanceResponse} returns this
 */
proto.tdex.v1.GetMarketBalanceResponse.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.GetMarketBalanceResponse.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.PreviewTradeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.PreviewTradeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.PreviewTradeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: (f = msg.getMarket()) && tdex_v1_types_pb.Market.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    asset: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.PreviewTradeRequest}
 */
proto.tdex.v1.PreviewTradeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.PreviewTradeRequest;
  return proto.tdex.v1.PreviewTradeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.PreviewTradeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.PreviewTradeRequest}
 */
proto.tdex.v1.PreviewTradeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.Market;
      reader.readMessage(value,tdex_v1_types_pb.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    case 2:
      var value = /** @type {!proto.tdex.v1.TradeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.PreviewTradeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.PreviewTradeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.PreviewTradeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_types_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Market market = 1;
 * @return {?proto.tdex.v1.Market}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.getMarket = function() {
  return /** @type{?proto.tdex.v1.Market} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Market, 1));
};


/**
 * @param {?proto.tdex.v1.Market|undefined} value
 * @return {!proto.tdex.v1.PreviewTradeRequest} returns this
*/
proto.tdex.v1.PreviewTradeRequest.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.PreviewTradeRequest} returns this
 */
proto.tdex.v1.PreviewTradeRequest.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TradeType type = 2;
 * @return {!proto.tdex.v1.TradeType}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.getType = function() {
  return /** @type {!proto.tdex.v1.TradeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.tdex.v1.TradeType} value
 * @return {!proto.tdex.v1.PreviewTradeRequest} returns this
 */
proto.tdex.v1.PreviewTradeRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 amount = 3;
 * @return {number}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex.v1.PreviewTradeRequest} returns this
 */
proto.tdex.v1.PreviewTradeRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string asset = 4;
 * @return {string}
 */
proto.tdex.v1.PreviewTradeRequest.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex.v1.PreviewTradeRequest} returns this
 */
proto.tdex.v1.PreviewTradeRequest.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tdex.v1.PreviewTradeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.PreviewTradeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.PreviewTradeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.PreviewTradeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.PreviewTradeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    previewsList: jspb.Message.toObjectList(msg.getPreviewsList(),
    tdex_v1_types_pb.Preview.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.PreviewTradeResponse}
 */
proto.tdex.v1.PreviewTradeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.PreviewTradeResponse;
  return proto.tdex.v1.PreviewTradeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.PreviewTradeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.PreviewTradeResponse}
 */
proto.tdex.v1.PreviewTradeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.Preview;
      reader.readMessage(value,tdex_v1_types_pb.Preview.deserializeBinaryFromReader);
      msg.addPreviews(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.PreviewTradeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.PreviewTradeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.PreviewTradeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.PreviewTradeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tdex_v1_types_pb.Preview.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Preview previews = 1;
 * @return {!Array<!proto.tdex.v1.Preview>}
 */
proto.tdex.v1.PreviewTradeResponse.prototype.getPreviewsList = function() {
  return /** @type{!Array<!proto.tdex.v1.Preview>} */ (
    jspb.Message.getRepeatedWrapperField(this, tdex_v1_types_pb.Preview, 1));
};


/**
 * @param {!Array<!proto.tdex.v1.Preview>} value
 * @return {!proto.tdex.v1.PreviewTradeResponse} returns this
*/
proto.tdex.v1.PreviewTradeResponse.prototype.setPreviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tdex.v1.Preview=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tdex.v1.Preview}
 */
proto.tdex.v1.PreviewTradeResponse.prototype.addPreviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tdex.v1.Preview, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tdex.v1.PreviewTradeResponse} returns this
 */
proto.tdex.v1.PreviewTradeResponse.prototype.clearPreviewsList = function() {
  return this.setPreviewsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.ProposeTradeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.ProposeTradeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ProposeTradeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: (f = msg.getMarket()) && tdex_v1_types_pb.Market.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    swapRequest: (f = msg.getSwapRequest()) && tdex_v1_swap_pb.SwapRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.ProposeTradeRequest}
 */
proto.tdex.v1.ProposeTradeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.ProposeTradeRequest;
  return proto.tdex.v1.ProposeTradeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.ProposeTradeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.ProposeTradeRequest}
 */
proto.tdex.v1.ProposeTradeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_types_pb.Market;
      reader.readMessage(value,tdex_v1_types_pb.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    case 2:
      var value = /** @type {!proto.tdex.v1.TradeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new tdex_v1_swap_pb.SwapRequest;
      reader.readMessage(value,tdex_v1_swap_pb.SwapRequest.deserializeBinaryFromReader);
      msg.setSwapRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.ProposeTradeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.ProposeTradeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ProposeTradeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_types_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSwapRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      tdex_v1_swap_pb.SwapRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional Market market = 1;
 * @return {?proto.tdex.v1.Market}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.getMarket = function() {
  return /** @type{?proto.tdex.v1.Market} */ (
    jspb.Message.getWrapperField(this, tdex_v1_types_pb.Market, 1));
};


/**
 * @param {?proto.tdex.v1.Market|undefined} value
 * @return {!proto.tdex.v1.ProposeTradeRequest} returns this
*/
proto.tdex.v1.ProposeTradeRequest.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.ProposeTradeRequest} returns this
 */
proto.tdex.v1.ProposeTradeRequest.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TradeType type = 2;
 * @return {!proto.tdex.v1.TradeType}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.getType = function() {
  return /** @type {!proto.tdex.v1.TradeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.tdex.v1.TradeType} value
 * @return {!proto.tdex.v1.ProposeTradeRequest} returns this
 */
proto.tdex.v1.ProposeTradeRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SwapRequest swap_request = 3;
 * @return {?proto.tdex.v1.SwapRequest}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.getSwapRequest = function() {
  return /** @type{?proto.tdex.v1.SwapRequest} */ (
    jspb.Message.getWrapperField(this, tdex_v1_swap_pb.SwapRequest, 3));
};


/**
 * @param {?proto.tdex.v1.SwapRequest|undefined} value
 * @return {!proto.tdex.v1.ProposeTradeRequest} returns this
*/
proto.tdex.v1.ProposeTradeRequest.prototype.setSwapRequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.ProposeTradeRequest} returns this
 */
proto.tdex.v1.ProposeTradeRequest.prototype.clearSwapRequest = function() {
  return this.setSwapRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.ProposeTradeRequest.prototype.hasSwapRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.ProposeTradeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.ProposeTradeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ProposeTradeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    swapAccept: (f = msg.getSwapAccept()) && tdex_v1_swap_pb.SwapAccept.toObject(includeInstance, f),
    swapFail: (f = msg.getSwapFail()) && tdex_v1_swap_pb.SwapFail.toObject(includeInstance, f),
    expiryTimeUnix: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.ProposeTradeResponse}
 */
proto.tdex.v1.ProposeTradeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.ProposeTradeResponse;
  return proto.tdex.v1.ProposeTradeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.ProposeTradeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.ProposeTradeResponse}
 */
proto.tdex.v1.ProposeTradeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_swap_pb.SwapAccept;
      reader.readMessage(value,tdex_v1_swap_pb.SwapAccept.deserializeBinaryFromReader);
      msg.setSwapAccept(value);
      break;
    case 2:
      var value = new tdex_v1_swap_pb.SwapFail;
      reader.readMessage(value,tdex_v1_swap_pb.SwapFail.deserializeBinaryFromReader);
      msg.setSwapFail(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiryTimeUnix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.ProposeTradeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.ProposeTradeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.ProposeTradeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSwapAccept();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_swap_pb.SwapAccept.serializeBinaryToWriter
    );
  }
  f = message.getSwapFail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tdex_v1_swap_pb.SwapFail.serializeBinaryToWriter
    );
  }
  f = message.getExpiryTimeUnix();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional SwapAccept swap_accept = 1;
 * @return {?proto.tdex.v1.SwapAccept}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.getSwapAccept = function() {
  return /** @type{?proto.tdex.v1.SwapAccept} */ (
    jspb.Message.getWrapperField(this, tdex_v1_swap_pb.SwapAccept, 1));
};


/**
 * @param {?proto.tdex.v1.SwapAccept|undefined} value
 * @return {!proto.tdex.v1.ProposeTradeResponse} returns this
*/
proto.tdex.v1.ProposeTradeResponse.prototype.setSwapAccept = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.ProposeTradeResponse} returns this
 */
proto.tdex.v1.ProposeTradeResponse.prototype.clearSwapAccept = function() {
  return this.setSwapAccept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.hasSwapAccept = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SwapFail swap_fail = 2;
 * @return {?proto.tdex.v1.SwapFail}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.getSwapFail = function() {
  return /** @type{?proto.tdex.v1.SwapFail} */ (
    jspb.Message.getWrapperField(this, tdex_v1_swap_pb.SwapFail, 2));
};


/**
 * @param {?proto.tdex.v1.SwapFail|undefined} value
 * @return {!proto.tdex.v1.ProposeTradeResponse} returns this
*/
proto.tdex.v1.ProposeTradeResponse.prototype.setSwapFail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.ProposeTradeResponse} returns this
 */
proto.tdex.v1.ProposeTradeResponse.prototype.clearSwapFail = function() {
  return this.setSwapFail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.hasSwapFail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 expiry_time_unix = 3;
 * @return {number}
 */
proto.tdex.v1.ProposeTradeResponse.prototype.getExpiryTimeUnix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tdex.v1.ProposeTradeResponse} returns this
 */
proto.tdex.v1.ProposeTradeResponse.prototype.setExpiryTimeUnix = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.CompleteTradeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.CompleteTradeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.CompleteTradeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.CompleteTradeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    swapComplete: (f = msg.getSwapComplete()) && tdex_v1_swap_pb.SwapComplete.toObject(includeInstance, f),
    swapFail: (f = msg.getSwapFail()) && tdex_v1_swap_pb.SwapFail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.CompleteTradeRequest}
 */
proto.tdex.v1.CompleteTradeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.CompleteTradeRequest;
  return proto.tdex.v1.CompleteTradeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.CompleteTradeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.CompleteTradeRequest}
 */
proto.tdex.v1.CompleteTradeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tdex_v1_swap_pb.SwapComplete;
      reader.readMessage(value,tdex_v1_swap_pb.SwapComplete.deserializeBinaryFromReader);
      msg.setSwapComplete(value);
      break;
    case 2:
      var value = new tdex_v1_swap_pb.SwapFail;
      reader.readMessage(value,tdex_v1_swap_pb.SwapFail.deserializeBinaryFromReader);
      msg.setSwapFail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.CompleteTradeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.CompleteTradeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.CompleteTradeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.CompleteTradeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSwapComplete();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tdex_v1_swap_pb.SwapComplete.serializeBinaryToWriter
    );
  }
  f = message.getSwapFail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tdex_v1_swap_pb.SwapFail.serializeBinaryToWriter
    );
  }
};


/**
 * optional SwapComplete swap_complete = 1;
 * @return {?proto.tdex.v1.SwapComplete}
 */
proto.tdex.v1.CompleteTradeRequest.prototype.getSwapComplete = function() {
  return /** @type{?proto.tdex.v1.SwapComplete} */ (
    jspb.Message.getWrapperField(this, tdex_v1_swap_pb.SwapComplete, 1));
};


/**
 * @param {?proto.tdex.v1.SwapComplete|undefined} value
 * @return {!proto.tdex.v1.CompleteTradeRequest} returns this
*/
proto.tdex.v1.CompleteTradeRequest.prototype.setSwapComplete = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.CompleteTradeRequest} returns this
 */
proto.tdex.v1.CompleteTradeRequest.prototype.clearSwapComplete = function() {
  return this.setSwapComplete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.CompleteTradeRequest.prototype.hasSwapComplete = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SwapFail swap_fail = 2;
 * @return {?proto.tdex.v1.SwapFail}
 */
proto.tdex.v1.CompleteTradeRequest.prototype.getSwapFail = function() {
  return /** @type{?proto.tdex.v1.SwapFail} */ (
    jspb.Message.getWrapperField(this, tdex_v1_swap_pb.SwapFail, 2));
};


/**
 * @param {?proto.tdex.v1.SwapFail|undefined} value
 * @return {!proto.tdex.v1.CompleteTradeRequest} returns this
*/
proto.tdex.v1.CompleteTradeRequest.prototype.setSwapFail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.CompleteTradeRequest} returns this
 */
proto.tdex.v1.CompleteTradeRequest.prototype.clearSwapFail = function() {
  return this.setSwapFail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.CompleteTradeRequest.prototype.hasSwapFail = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tdex.v1.CompleteTradeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tdex.v1.CompleteTradeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tdex.v1.CompleteTradeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.CompleteTradeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    swapFail: (f = msg.getSwapFail()) && tdex_v1_swap_pb.SwapFail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tdex.v1.CompleteTradeResponse}
 */
proto.tdex.v1.CompleteTradeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tdex.v1.CompleteTradeResponse;
  return proto.tdex.v1.CompleteTradeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tdex.v1.CompleteTradeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tdex.v1.CompleteTradeResponse}
 */
proto.tdex.v1.CompleteTradeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxid(value);
      break;
    case 2:
      var value = new tdex_v1_swap_pb.SwapFail;
      reader.readMessage(value,tdex_v1_swap_pb.SwapFail.deserializeBinaryFromReader);
      msg.setSwapFail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tdex.v1.CompleteTradeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tdex.v1.CompleteTradeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tdex.v1.CompleteTradeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tdex.v1.CompleteTradeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSwapFail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tdex_v1_swap_pb.SwapFail.serializeBinaryToWriter
    );
  }
};


/**
 * optional string txid = 1;
 * @return {string}
 */
proto.tdex.v1.CompleteTradeResponse.prototype.getTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tdex.v1.CompleteTradeResponse} returns this
 */
proto.tdex.v1.CompleteTradeResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SwapFail swap_fail = 2;
 * @return {?proto.tdex.v1.SwapFail}
 */
proto.tdex.v1.CompleteTradeResponse.prototype.getSwapFail = function() {
  return /** @type{?proto.tdex.v1.SwapFail} */ (
    jspb.Message.getWrapperField(this, tdex_v1_swap_pb.SwapFail, 2));
};


/**
 * @param {?proto.tdex.v1.SwapFail|undefined} value
 * @return {!proto.tdex.v1.CompleteTradeResponse} returns this
*/
proto.tdex.v1.CompleteTradeResponse.prototype.setSwapFail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tdex.v1.CompleteTradeResponse} returns this
 */
proto.tdex.v1.CompleteTradeResponse.prototype.clearSwapFail = function() {
  return this.setSwapFail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tdex.v1.CompleteTradeResponse.prototype.hasSwapFail = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.tdex.v1);
