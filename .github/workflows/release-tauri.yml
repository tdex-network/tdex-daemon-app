name: "Release desktop apps"

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04 ]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: ^1.17
        id: go

      - name: Install dasel
        run: |
          go install github.com/tomwright/dasel/cmd/dasel@latest

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf    

      - name: install app dependencies
        run: yarn install

      - name: build rpc proxy for amd & arm
        run: make crossbuild

      - name: tag
        id: next_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: version
        id: next_version
        run: |
          tag=${{ steps.next_tag.outputs.tag }}
          echo ::set-output name=version::${tag:1}

      - name: Git config and pull
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
          git config pull.rebase true
          git fetch origin master
          git pull origin master    

      - name: Increment version
        run: |
          dasel put string -f package.json ".version" "${{ steps.next_version.outputs.version }}"
          dasel put string -f src-tauri/tauri.conf.json ".package.version" "${{ steps.next_version.outputs.version }}"
          dasel put string -f src-tauri/Cargo.toml ".package.version" "${{ steps.next_version.outputs.version }}"

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: ${{ steps.next_tag.outputs.tag }}
          releaseName: "TDEX Dashboard ${{ steps.next_tag.outputs.tag }}"
          releaseBody: "See the assets to download this version and install."
          includeDebug: true
          # args: --verbose

      #- uses: actions/upload-artifact@v3
      #  if: matrix.platform == 'ubuntu-20.04'
      #  with:
      #    name: linux-updater-artifacts
      #    path: ./target/release/bundle/appimage/tdex-dashboard_*.AppImage.*

      #- uses: actions/upload-artifact@v3
      #  if: matrix.platform == 'macos-latest'
      #  with:
      #    name: macos-updater-artifacts
      #    path: ./target/release/bundle/macos/tdex-dashboard_*.app.tar.*

      # Commit package.json, tauri.conf.json and Cargo.toml to master
      - name: Commit & Push
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          git add .
          git commit -m "${{ steps.next_tag.outputs.tag }}"
          git push origin HEAD:master
